.binary-tree-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  backdrop-filter: blur(2px);
}

.binary-tree-container {
  display: flex;
  justify-content: center;
  padding: 20px;
  font-family: var(--primary-font);
  overflow-x: auto;
  text-align: center;
  background: var(--color-bg-light);
  border: 2px solid var(--color-text-light);
  border-radius: 12px;
  min-width: 600px;
  max-width: 90vw;
  max-height: 80vh;
  overflow: auto;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

/* General container for the entire tree visualization */
.binary-tree-container {
  display: flex;
  justify-content: center;
  padding: 20px;
  font-family: var(--primary-font);
  overflow-x: auto;
  text-align: center;
}

/* Styles for the container of a node and its children */
.node-container {
  display: inline-flex; /* Use inline-flex to allow nodes to sit side-by-side */
  flex-direction: column;
  align-items: center;
  position: relative;
  padding: 20px 0; /* Vertical padding, horizontal is handled by children */
}

.tree-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid var(--color-text-light);
  background: var(--color-bg-dark);
  color: var(--color-text-dark);
  border-radius: 10px 10px 0 0;
}

.tree-header h3 {
  margin: 0;
  font-size: 1.2rem;
}

.close-btn {
  background: none;
  border: none;
  font-size: 2rem;
  color: var(--color-text-dark);
  cursor: pointer;
  padding: 0;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color 0.2s;
}

.close-btn:hover {
  background: rgba(255, 255, 255, 0.1);
}

.tree-info {
  padding: 1rem 1.5rem;
  background: var(--color-bg-light);
  color: var(--color-text-light);
  border-bottom: 1px solid var(--color-text-light);
}

.tree-info p {
  margin: 0.5rem 0;
}

.tree-visualization {
  padding: 2rem;
  background: var(--color-bg-light);
  color: var(--color-text-light);
  min-height: 300px;
  overflow: auto;
}

.tree-root {
  display: flex;
  justify-content: center;
  width: 100%;
}

.tree-node-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0 10px;
}

.tree-node {
  width: 40px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  font-weight: bold;
  font-size: 1rem;
  position: relative;
  z-index: 2;
  /* Default shape: rounded square */
  border-radius: 8px;
}

/* Default color for a regular node */
.binary-tree-container.unbalanced .tree-node {
    background-color: var(--color-error); /* Red for unbalanced */
}

/* Color and shape for nodes in a balanced tree */
.binary-tree-container.balanced .tree-node {
    background-color: var(--color-accent); /* A shade of blue for balanced */
    border-radius: 50%; /* Circular shape */
}

/* Specific color for a leaf node, overrides other colors */
.tree-node.leaf {
  background-color: var(--color-success); /* Green for leaf nodes */
}

.node-value {
  cursor: default;
}

/* Container for the children of a node */
.children {
  display: flex;
  position: relative;
  padding-top: 20px;
}

/* A branch of the tree containing a subtree */
.node-branch {
  padding: 0 10px; /* Horizontal spacing between children */
  position: relative;
}

/* Draw line from parent to child */
.node-branch::before {
  content: '';
  position: absolute;
  top: -20px;
  left: 50%;
  border-left: 2px solid #ccc;
  width: 0;
  height: 20px;
  transform: translateX(-1px);
}

/* Draw horizontal connecting line above children */
.children::after {
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  height: 2px;
  background-color: #ccc;
  /* The width is calculated based on the children's positions */
}

/* Horizontal line adjustments for two children */
.node-branch:not(:only-child):first-child::after {
    content: '';
    position: absolute;
    top: -20px;
    left: 50%;
    right: -10px; /* Extend to the gap */
    height: 2px;
    background-color: #ccc;
}

.node-branch:not(:only-child):last-child::after {
    content: '';
    position: absolute;
    top: -20px;
    right: 50%;
    left: -10px; /* Extend to the gap */
    height: 2px;
    background-color: #ccc;
}

.tree-error {
    color: var(--color-error);
    font-size: 1.2rem;
    padding: 20px;
}

/* Dark mode */
@media (prefers-color-scheme: dark) {
  .binary-tree-container {
    background: var(--color-bg-dark);
    border-color: var(--color-text-dark);
  }
  
  .tree-header {
    background: var(--color-bg-light);
    color: var(--color-text-light);
  }
  
  .tree-info,
  .tree-visualization {
    background: var(--color-bg-dark);
    color: var(--color-text-dark);
  }
  
  .close-btn {
    color: var(--color-text-light);
  }
  
  .close-btn:hover {
    background: rgba(0, 0, 0, 0.1);
  }
  
  .tree-node-container::before,
  .tree-children::before,
  .left-child::before,
  .right-child::before {
    background: var(--color-text-dark);
  }
  
  .node-value {
    color: var(--color-bg-dark);
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .binary-tree-container {
    min-width: 300px;
    margin: 1rem;
  }
  
  .tree-children {
    gap: 20px;
  }
  
  .node-value {
    width: 35px;
    height: 35px;
    font-size: 12px;
  }
}